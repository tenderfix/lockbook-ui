name: 'Plan'

on:
  pull_request:
    branches:
      - develop
      - staging
      - main
    types: [opened, synchronize, reopened, ready_for_review]

env:
  WEB_REPOSITORY_NAME: iac-lb-auth-web

permissions:
  contents: read
  id-token: write
  pull-requests: write
  packages: write
  
jobs:
  plan_project_web_infrastructure:
    name: 'Project Infrastructure Frontend (Plan)'
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    env:
      working-directory: './terraform/project-web'
      tf_s3_region: 'eu-central-1'
      tf_s3_bucket: 'lock-book-tfstate'
      tf_s3_key: 'states/lb/auth-web/tfstate'
      COMMENT_ID: c3de9def-3200-4c1e-bf52-639f6bc3fa09

    steps:
      - name: Checkout
        if: github.base_ref == 'main'
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
            audience: sts.amazonaws.com
            aws-region: eu-central-1
            role-to-assume: ${{ secrets.TERRAFORM_ROLE }}

      - name: Setup Terraform
        if: github.base_ref == 'main'
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        if: github.base_ref == 'main'
        id: fmt
        run: terraform fmt -check
        working-directory: ${{env.working-directory}}

      - name: Terraform Init
        if: github.base_ref == 'main'
        id: init
        run: terraform init -input=false -backend-config="region=${{env.tf_s3_region}}" -backend-config="bucket=${{env.tf_s3_bucket}}" -backend-config="key=${{env.tf_s3_key}}"
        working-directory: ${{env.working-directory}}

      - name: Terraform Validate
        if: github.base_ref == 'main'
        id: validate
        run: terraform validate -no-color
        working-directory: ${{env.working-directory}}

      - name: Terraform Plan
        if: github.base_ref == 'main'
        id: plan
        run: terraform plan -input=false -no-color -var="ecr_repository_name=${{ env.WEB_REPOSITORY_NAME }}" -var="sentry_token=${{ secrets.SENTRY_TOKEN }}"
        working-directory: ${{env.working-directory}}
        continue-on-error: true

      - name: Find Github Actions Comment
        uses: peter-evans/find-comment@v2
        if: github.base_ref == 'main'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ${{ env.COMMENT_ID }}

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v2
        if: github.base_ref == 'main'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            <!-- Comment-Finder: ${{ env.COMMENT_ID }} -->
            ## Project Terraform (Frontend)

            | Format üñå | Init ‚öôÔ∏è | Validate ü§ñ | Plan üìñ | Pusher ü¶π | Action ü§∏ |
            |-|-|-|-|-|-|
            | ${{ steps.fmt.outcome == 'success' && '‚úÖ' || '‚õîÔ∏è' }} | ${{ steps.init.outcome == 'success' && '‚úÖ' || '‚õîÔ∏è' }} | ${{ contains(steps.validate.outcome, 'Success') && '‚úÖ' || '‚õîÔ∏è' }} | ${{ steps.plan.outcome == 'success' && '‚úÖ' || '‚õîÔ∏è' }} | @${{ github.actor }} | ${{ github.event_name }} |

            <details><summary>Show Plan</summary>

              ```
              ${{ steps.plan.outputs.stdout }}
              ```

            </details>

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  plan_environment_web_infrastructure:
    name: 'Environment Infrastructure Frontend (Plan)'
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    env:
      working-directory: './terraform/environment-web'
      tf_s3_region: 'eu-central-1'
      tf_s3_bucket: 'lock-book-tfstate'
      tf_s3_key: 'states/lb/auth-web/${{ github.base_ref }}/tfstate'
      COMMENT_ID: 375c9787-8638-4dc7-b4f6-08bfdd40b4b5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
            audience: sts.amazonaws.com
            aws-region: eu-central-1
            role-to-assume: ${{ secrets.TERRAFORM_ROLE }}

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.TERRAFORM_MODULES }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ${{env.working-directory}}

      - name: Terraform Init
        id: init
        run: terraform init -input=false -backend-config="region=${{env.tf_s3_region}}" -backend-config="bucket=${{env.tf_s3_bucket}}" -backend-config="key=${{env.tf_s3_key}}"
        working-directory: ${{env.working-directory}}

      - name: Terraform Validate
        id: validate
        env:
          OP_CONNECT_TOKEN: ${{ secrets.ONEPASSWORD_CONNECT_TOKEN }}
        run: terraform validate -no-color
        working-directory: ${{env.working-directory}}

      - name: Terraform Plan
        id: plan
        env:
          OP_CONNECT_TOKEN: ${{ secrets.ONEPASSWORD_CONNECT_TOKEN }}
        run: terraform plan -input=false -no-color -var="branch_name=${{ github.base_ref }}" -var="commit_hash=${{ github.sha }}" -var="ecr_repository_name=${{ env.WEB_REPOSITORY_NAME }}" -var="lacework_access_token=${{ secrets.LW_ACCESS_TOKEN }}"
        working-directory: ${{env.working-directory}}
        continue-on-error: true

      - name: Find Github Actions Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ${{ env.COMMENT_ID }}

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            <!-- Comment-Finder: ${{ env.COMMENT_ID }} -->
            ## Environment Terraform (Frontend)

            | Format üñå | Init ‚öôÔ∏è | Validate ü§ñ | Plan üìñ | Pusher ü¶π | Action ü§∏ |
            |-|-|-|-|-|-|
            | ${{ steps.fmt.outcome == 'success' && '‚úÖ' || '‚õîÔ∏è' }} | ${{ steps.init.outcome == 'success' && '‚úÖ' || '‚õîÔ∏è' }} | ${{ contains(steps.validate.outcome, 'Success') && '‚úÖ' || '‚õîÔ∏è' }} | ${{ steps.plan.outcome == 'success' && '‚úÖ' || '‚õîÔ∏è' }} | @${{ github.actor }} | ${{ github.event_name }} |

            <details><summary>Show Plan</summary>

              ```
              ${{ steps.plan.outputs.stdout }}
              ```

            </details>

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
